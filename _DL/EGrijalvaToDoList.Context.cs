//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EGrijalvaToDoListEntities : DbContext
    {
        public EGrijalvaToDoListEntities()
            : base("name=EGrijalvaToDoListEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Estatus> Estatus { get; set; }
        public virtual DbSet<Tarea> Tarea { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int AddTarea(string titulo, string descripcion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaCaducidad, Nullable<int> idStatus, Nullable<int> idUsuario)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaCaducidadParameter = fechaCaducidad.HasValue ?
                new ObjectParameter("FechaCaducidad", fechaCaducidad) :
                new ObjectParameter("FechaCaducidad", typeof(System.DateTime));
    
            var idStatusParameter = idStatus.HasValue ?
                new ObjectParameter("IdStatus", idStatus) :
                new ObjectParameter("IdStatus", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTarea", tituloParameter, descripcionParameter, fechaInicioParameter, fechaCaducidadParameter, idStatusParameter, idUsuarioParameter);
        }
    
        public virtual int AddUsuario(string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<System.DateTime> fechaNacimiento, string correo, string password)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUsuario", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaNacimientoParameter, correoParameter, passwordParameter);
        }
    
        public virtual int DeleteEstatus(Nullable<int> idStatus)
        {
            var idStatusParameter = idStatus.HasValue ?
                new ObjectParameter("IdStatus", idStatus) :
                new ObjectParameter("IdStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEstatus", idStatusParameter);
        }
    
        public virtual int DeleteTarea(Nullable<int> idTarea)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTarea", idTareaParameter);
        }
    
        public virtual int DeleteUsuario(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUsuario", idUsuarioParameter);
        }
    
        public virtual ObjectResult<GetEstatusById_Result> GetEstatusById(Nullable<int> idStatus)
        {
            var idStatusParameter = idStatus.HasValue ?
                new ObjectParameter("IdStatus", idStatus) :
                new ObjectParameter("IdStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEstatusById_Result>("GetEstatusById", idStatusParameter);
        }
    
        public virtual ObjectResult<GetTareaById_Result> GetTareaById(Nullable<int> idTarea)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTareaById_Result>("GetTareaById", idTareaParameter);
        }
    
        public virtual ObjectResult<GetTareasByUsuario_Result> GetTareasByUsuario(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTareasByUsuario_Result>("GetTareasByUsuario", idUsuarioParameter);
        }
    
        public virtual ObjectResult<GetUsuarioById_Result> GetUsuarioById(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsuarioById_Result>("GetUsuarioById", idUsuarioParameter);
        }
    
        public virtual int UpdateEstatus(Nullable<int> idStatus, string descripcion)
        {
            var idStatusParameter = idStatus.HasValue ?
                new ObjectParameter("IdStatus", idStatus) :
                new ObjectParameter("IdStatus", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEstatus", idStatusParameter, descripcionParameter);
        }
    
        public virtual int UpdateTarea(Nullable<int> idTarea, string titulo, string descripcion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaCaducidad, Nullable<int> idStatus, Nullable<int> idUsuario)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaCaducidadParameter = fechaCaducidad.HasValue ?
                new ObjectParameter("FechaCaducidad", fechaCaducidad) :
                new ObjectParameter("FechaCaducidad", typeof(System.DateTime));
    
            var idStatusParameter = idStatus.HasValue ?
                new ObjectParameter("IdStatus", idStatus) :
                new ObjectParameter("IdStatus", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTarea", idTareaParameter, tituloParameter, descripcionParameter, fechaInicioParameter, fechaCaducidadParameter, idStatusParameter, idUsuarioParameter);
        }
    
        public virtual int UpdateUsuario(Nullable<int> idUsuario, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<System.DateTime> fechaNacimiento, string correo, string password)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUsuario", idUsuarioParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaNacimientoParameter, correoParameter, passwordParameter);
        }
    }
}
